[{"C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\App.jsx":"2","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\Header.jsx":"3","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\StatCard.jsx":"4","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\Stats.jsx":"5","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\CountrySelector.jsx":"6","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\api__requests.js":"7","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\Bar.jsx":"8"},{"size":155,"mtime":1622790908079,"results":"9","hashOfConfig":"10"},{"size":758,"mtime":1622813651950,"results":"11","hashOfConfig":"10"},{"size":338,"mtime":1622799888083,"results":"12","hashOfConfig":"10"},{"size":903,"mtime":1622812713982,"results":"13","hashOfConfig":"10"},{"size":1315,"mtime":1622813704288,"results":"14","hashOfConfig":"10"},{"size":1108,"mtime":1622808871131,"results":"15","hashOfConfig":"10"},{"size":1049,"mtime":1622809955809,"results":"16","hashOfConfig":"10"},{"size":2150,"mtime":1622815801216,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jprxd1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\index.js",[],["38","39"],"C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\App.jsx",[],"C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\Header.jsx",["40"],"import React from 'react'\r\nimport Logo from '../images/Covid.svg';\r\nconst Header = () => {\r\n    return (\r\n        <header className = \"header\">\r\n        <div className = \"head__wrapper\">\r\n        <span>C</span><span><img src = {Logo}/></span><span>VID19 STATS</span>\r\n        </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\StatCard.jsx",["41"],"import React from 'react'\r\nimport Countup from 'react-countup'\r\nimport {CurrentLoacationContext} from '../App' ; \r\nconst StatCard = ({color , content , number}) => {\r\n    const [currentLocation , setCurrentLocation] = React.useContext(CurrentLoacationContext) ; \r\n    return (\r\n        <div className=\"stat\" style = {{borderBottom:`8px solid ${color}`}}>\r\n            <center>\r\n                <div className=\"placename\">{currentLocation}</div>\r\n                <div className=\"number\">\r\n                <Countup\r\n                start = {0}\r\n                end = {number}\r\n                duration = {String(number).length >= 5 ? 4 : 2}\r\n                separator = {\",\"}\r\n                />\r\n                </div>\r\n                <div className=\"content\">\r\n                {content}\r\n                </div>\r\n            </center>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatCard\r\n","C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\Stats.jsx",["42"],"C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\CountrySelector.jsx",[],"C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\api__requests.js",[],"C:\\Users\\Admin\\Desktop\\Coding\\covid-tracker-app\\src\\components\\Bar.jsx",["43","44"],"import {Bar , defaults} from 'react-chartjs-2' ; \r\nimport React , { useContext, useState , useEffect} from 'react'\r\nimport {CurrentLoacationContext} from '../App' ;\r\nimport {fetchIndivisualCountryData} from '../api__requests' ; \r\ndefaults.plugins.legend.display = false ; \r\nconst BarChart = () => {\r\n    const [currentLocation , setCurrentLocation] = React.useContext(CurrentLoacationContext); \r\n    const [data , setData] = useState(null) ; \r\n    useEffect(() => {\r\n        const fetchData = async() => {\r\n            const data = await fetchIndivisualCountryData(currentLocation) ; \r\n            console.log(data) ; \r\n            const confirmed = data.confirmed.value ; \r\n            const recovered = data.recovered.value ; \r\n            const deaths = data.deaths.value ; \r\n            setData([confirmed , recovered , deaths]) ; \r\n        }\r\n        fetchData();\r\n    } , [currentLocation])\r\n    \r\n    return (\r\n        <div className = \"bar\">\r\n            {data && <React.Fragment>\r\n                <Bar\r\n                data = {{\r\n                    labels:[\"Total Cases\" , \"Recovered\" , \"Death\"],\r\n                    datasets:[\r\n                        {\r\n                            label:currentLocation , \r\n                            data:[data[0] , data[1] , data[2]],\r\n                            borderColor:\"black\" , \r\n                            borderWidth:2, \r\n                            border:\"1px solid black\",\r\n                            backgroundColor:[\"blue\" , \"lime\" , \"red\"],\r\n                            maxHeight:11\r\n                        }\r\n                    ]\r\n                }}\r\n                options = {{\r\n                    scales:{\r\n                        yAxes:[\r\n                            {\r\n                                ticks:{\r\n                                    reverse:true , \r\n                                    beginAtZero:true\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                }}\r\n                \r\n                />\r\n        </React.Fragment>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarChart ; ",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":7,"column":29,"nodeType":"51","endLine":7,"endColumn":48},{"ruleId":"52","severity":1,"message":"53","line":5,"column":30,"nodeType":"54","messageId":"55","endLine":5,"endColumn":48},{"ruleId":"52","severity":1,"message":"53","line":6,"column":30,"nodeType":"54","messageId":"55","endLine":6,"endColumn":48},{"ruleId":"52","severity":1,"message":"56","line":2,"column":18,"nodeType":"54","messageId":"55","endLine":2,"endColumn":28},{"ruleId":"52","severity":1,"message":"53","line":7,"column":30,"nodeType":"54","messageId":"55","endLine":7,"endColumn":48},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setCurrentLocation' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation"]